# Script PowerShell pour surveiller les changements et auto-d√©ployer
# Lance ce script pour un d√©ploiement automatique √† chaque modification

Write-Host "üëÄ Surveillance des changements activ√©e..." -ForegroundColor Green
Write-Host "üìù Modifiez vos fichiers, ils seront automatiquement d√©ploy√©s" -ForegroundColor Yellow
Write-Host "‚ùå Appuyez sur Ctrl+C pour arr√™ter" -ForegroundColor Red

# Fonction pour d√©ployer
function Deploy-Changes {
    param($Path)
    
    # Ignorer certains fichiers/dossiers
    if ($Path -match "node_modules|\.git|\.next|prisma.*\.db|\.env\.local") {
        return
    }
    
    Write-Host "`nüîÑ Changement d√©tect√©: $Path" -ForegroundColor Yellow
    
    # Attendre un peu pour √©viter les d√©ploiements multiples
    Start-Sleep -Seconds 2
    
    # Lancer le d√©ploiement
    & "$PSScriptRoot\auto-deploy.ps1" -message "‚ú® Mise √† jour: $(Split-Path $Path -Leaf)"
}

# Cr√©er le FileSystemWatcher
$watcher = New-Object System.IO.FileSystemWatcher
$watcher.Path = $PSScriptRoot
$watcher.IncludeSubdirectories = $true
$watcher.EnableRaisingEvents = $true

# D√©finir les actions
$action = {
    $path = $Event.SourceEventArgs.FullPath
    Deploy-Changes -Path $path
}

# Enregistrer les √©v√©nements
Register-ObjectEvent -InputObject $watcher -EventName "Changed" -Action $action
Register-ObjectEvent -InputObject $watcher -EventName "Created" -Action $action
Register-ObjectEvent -InputObject $watcher -EventName "Deleted" -Action $action
Register-ObjectEvent -InputObject $watcher -EventName "Renamed" -Action $action

# Garder le script en cours d'ex√©cution
try {
    while ($true) {
        Start-Sleep -Seconds 1
    }
} finally {
    # Nettoyer
    Get-EventSubscriber | Unregister-Event
    $watcher.Dispose()
    Write-Host "`nüõë Surveillance arr√™t√©e" -ForegroundColor Red
}