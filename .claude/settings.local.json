{
  "permissions": {
    "allow": [
      "Bash(DATABASE_URL=\"postgresql://postgres.dkwgorynhgnmldzbhhrb:Fortnite95!!@aws-0-eu-west-3.pooler.supabase.com:5432/postgres\" node -e \"\nconst { Pool } = require(''pg'');\nconst pool = new Pool({ connectionString: process.env.DATABASE_URL });\n\nasync function diagnose() {\n  console.log(''🔍 DIAGNOSTIC PARTAGE DE LIEN\\n'');\n  \n  // 1. Vérifier l''utilisateur invité\n  console.log(''1️⃣ Utilisateur ivorraflorent1@gmail.com:'');\n  const user = await pool.query(''SELECT id, email, \"\"teamId\"\", \"\"teamRole\"\" FROM users WHERE email = $1'', [''ivorraflorent1@gmail.com'']);\n  if (user.rows.length === 0) {\n    console.log(''   ❌ Utilisateur NON TROUVÉ\\n'');\n  } else {\n    console.log(''   ✅ Utilisateur trouvé'');\n    console.log(''   ID:'', user.rows[0].id);\n    console.log(''   TeamId:'', user.rows[0].teamId || ''NULL (PAS DANS UNE ÉQUIPE!)'');\n    console.log(''   TeamRole:'', user.rows[0].teamRole || ''NULL'');\n    console.log('''');\n  }\n  \n  // 2. Vérifier le lien lolobpts\n  console.log(''2️⃣ Lien lolobpts:'');\n  const link = await pool.query(''SELECT id, slug, title, \"\"teamShared\"\", \"\"teamId\"\", \"\"userId\"\" FROM links WHERE slug = $1'', [''lolobpts'']);\n  if (link.rows.length === 0) {\n    console.log(''   ❌ Lien NON TROUVÉ\\n'');\n  } else {\n    console.log(''   ✅ Lien trouvé'');\n    console.log(''   ID:'', link.rows[0].id);\n    console.log(''   TeamShared:'', link.rows[0].teamShared);\n    console.log(''   TeamId:'', link.rows[0].teamId || ''NULL (PAS PARTAGÉ!)'');\n    console.log(''   UserId (propriétaire):'', link.rows[0].userId);\n    console.log('''');\n  }\n  \n  // 3. Vérifier les invitations\n  console.log(''3️⃣ Invitations pour ivorraflorent1@gmail.com:'');\n  const invitations = await pool.query(''SELECT id, email, status, \"\"teamId\"\", role, \"\"expiresAt\"\" FROM team_invitations WHERE email = $1'', [''ivorraflorent1@gmail.com'']);\n  if (invitations.rows.length === 0) {\n    console.log(''   ❌ Aucune invitation trouvée\\n'');\n  } else {\n    invitations.rows.forEach((inv, i) => {\n      console.log(''   Invitation'', i + 1 + '':'');\n      console.log(''   Status:'', inv.status);\n      console.log(''   TeamId:'', inv.teamId);\n      console.log(''   Role:'', inv.role);\n      console.log(''   Expire:'', inv.expiresAt);\n      console.log('''');\n    });\n  }\n  \n  // 4. Vérifier toutes les équipes\n  console.log(''4️⃣ Équipes existantes:'');\n  const teams = await pool.query(''SELECT id, name, \"\"ownerId\"\" FROM teams'');\n  teams.rows.forEach((team, i) => {\n    console.log(''   Équipe'', i + 1 + '':'', team.name);\n    console.log(''   ID:'', team.id);\n    console.log(''   OwnerId:'', team.ownerId);\n    console.log('''');\n  });\n  \n  pool.end();\n}\n\ndiagnose().catch(e => { console.error(e); pool.end(); });\n\")"
    ],
    "deny": [],
    "ask": []
  }
}