const { PrismaClient } = require('@prisma/client')
const prisma = new PrismaClient()

async function shareAllFolders() {
  try {
    console.log('üîç Recherche des dossiers √† partager...\n')

    // R√©cup√©rer l'utilisateur principal (toi)
    const mainUser = await prisma.user.findUnique({
      where: { email: 'ivorraflorentt@gmail.com' },
      select: { id: true, teamId: true, email: true }
    })

    if (!mainUser) {
      console.log('‚ùå Utilisateur principal non trouv√©')
      return
    }

    console.log('‚úÖ Utilisateur trouv√©:', mainUser.email)
    console.log('   TeamId:', mainUser.teamId || 'AUCUNE √âQUIPE')

    if (!mainUser.teamId) {
      console.log('‚ùå L\'utilisateur n\'a pas d\'√©quipe')
      return
    }

    // R√©cup√©rer tous les dossiers de l'utilisateur qui ne sont pas encore partag√©s
    const folders = await prisma.folder.findMany({
      where: {
        userId: mainUser.id,
        teamShared: false
      },
      select: {
        id: true,
        name: true,
        description: true
      }
    })

    console.log(`\nüìÅ ${folders.length} dossier(s) √† partager:\n`)

    if (folders.length === 0) {
      console.log('‚úÖ Tous les dossiers sont d√©j√† partag√©s ou aucun dossier trouv√©')
      return
    }

    // Partager chaque dossier
    for (const folder of folders) {
      console.log(`   Partage: ${folder.name}`)

      await prisma.folder.update({
        where: { id: folder.id },
        data: {
          teamShared: true,
          teamId: mainUser.teamId,
          originalOwnerId: mainUser.id
        }
      })
    }

    console.log('\n‚úÖ Tous les dossiers ont √©t√© partag√©s avec l\'√©quipe!')

    // V√©rification
    const sharedFolders = await prisma.folder.findMany({
      where: {
        teamId: mainUser.teamId,
        teamShared: true
      },
      select: {
        id: true,
        name: true
      }
    })

    console.log(`\nüìä Total des dossiers partag√©s: ${sharedFolders.length}`)
    sharedFolders.forEach((folder, i) => {
      console.log(`   ${i + 1}. ${folder.name}`)
    })

  } catch (error) {
    console.error('‚ùå Erreur:', error)
  } finally {
    await prisma.$disconnect()
  }
}

shareAllFolders()
